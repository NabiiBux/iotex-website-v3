{"version":3,"sources":["../src/Symbol.js","../src/Object.js","../../stringify/src/toCase.js","../../stringify/src/getResolvedSelectors.js","../../stringify/src/Array.js","../../stringify/src/index.js","../src/unitOnlyProps.js","../src/createStringify.js","../src/Reflect.js","../src/StringSet.js","../src/defaultThemeMap.js","../src/getHashString.js","../src/ThemeToken.js","../src/StringArray.js","../src/defaultInsertionMethod.js","../src/index.js"],"names":["toPrimitive","Symbol","$$composers","for","assign","create","defineProperties","getOwnPropertyDescriptors","Object","createComponent","base","prop","props","[object Object]","toString","toKebabCase","value","includes","replace","capital","toLowerCase","getResolvedSelectors","parentSelectors","nestedSelectors","reduce","resolvedSelectors","parentSelector","push","map","selector","test","isArray","Array","from","prototype","comma","unitOnlyProps_default","captureTokens","splitBySpace","split","fn","data","String","mqunit","polys","appearance","d","WebkitAppearance","backfaceVisibility","WebkitBackfaceVisibility","backgroundClip","WebkitBackgroundClip","boxDecorationBreak","WebkitBoxDecorationBreak","clipPath","WebkitClipPath","content","hyphens","WebkitHyphens","maskImage","WebkitMaskImage","tabSize","MozTabSize","userSelect","WebkitUserSelect","marginBlock","s","e","marginBlockStart","marginBlockEnd","marginInline","marginInlineStart","marginInlineEnd","maxSize","b","i","maxBlockSize","maxInlineSize","minSize","minBlockSize","minInlineSize","paddingBlock","paddingBlockStart","paddingBlockEnd","paddingInline","paddingInlineStart","paddingInlineEnd","createStringify","config","media","prefix","themeMap","utils","lastRegxName","lastRegxData","lastUtilFunc","lastUtilData","css2","replacer","used","WeakSet","parse","style","selectors","conditions","prevName","prevData","cssText","each","name","isAtRuleLike","charCodeAt","next","has","delete","usedName","nextSelectors","length","concat","add","stringify","firstChar","camelName","toUpperCase","kebabName","redata","data2","lead","main","tail","customName","slice","_","a","l","r","c","isValueFirst","shift","name2","_2","v","u","Number","customData","$0","direction","multiplier","separator","token","ownKeys","Reflect","StringSet","Set","this","join","hasChanged","size","StringSet_default","colors","sizes","space","defaultThemeMap_default","gap","gridGap","columnGap","gridColumnGap","rowGap","gridRowGap","inset","insetBlock","insetBlockEnd","insetBlockStart","insetInline","insetInlineEnd","insetInlineStart","margin","marginTop","marginRight","marginBottom","marginLeft","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","top","right","bottom","left","scrollMargin","scrollMarginTop","scrollMarginRight","scrollMarginBottom","scrollMarginLeft","scrollMarginX","scrollMarginY","scrollMarginBlock","scrollMarginBlockEnd","scrollMarginBlockStart","scrollMarginInline","scrollMarginInlineEnd","scrollMarginInlineStart","scrollPadding","scrollPaddingTop","scrollPaddingRight","scrollPaddingBottom","scrollPaddingLeft","scrollPaddingX","scrollPaddingY","scrollPaddingBlock","scrollPaddingBlockEnd","scrollPaddingBlockStart","scrollPaddingInline","scrollPaddingInlineEnd","scrollPaddingInlineStart","fontSize","background","backgroundColor","backgroundImage","border","borderBlock","borderBlockEnd","borderBlockStart","borderBottom","borderBottomColor","borderColor","borderInline","borderInlineEnd","borderInlineStart","borderLeft","borderLeftColor","borderRight","borderRightColor","borderTop","borderTopColor","caretColor","color","columnRuleColor","fill","outline","outlineColor","stroke","textDecorationColor","fontFamily","fontWeight","lineHeight","letterSpacing","blockSize","inlineSize","width","minWidth","maxWidth","height","minHeight","maxHeight","flexBasis","gridTemplateColumns","gridTemplateRows","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderStyle","borderTopStyle","borderRightStyle","borderBottomStyle","borderLeftStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","boxShadow","textShadow","transition","zIndex","getHashString_default","object","JSON","index","hash","Math","imul","dash","ThemeToken_default","scale","computedValue","variable","StringArray","StringArray_default","defaultInsertionMethod_default","init","currentCssHead","currentCssNode","currentSsrText","currentHotText","visibilityWait","isSsrCssRemoved","insertionMethod","document","head","documentElement","getElementById","createElement","id","textContent","firstChild","Text","insertBefore","isConnected","clearTimeout","setTimeout","remove","createCss","initConfig","initial","theme","passThru","passthru","emptyClassName","stringify2","importCss","themedCss","globalCss","styledCss","unitedCss","currentCssText","update","nextUpdate","className","theme2","expression","rootStyles","styles","$1","themeToken","global2","localImportCss","localGlobalCss","express","hasImportChanged","hasGlobalChanged","forEach","localImportCss2","localGlobalCss2","createComposer","initStyle","primalCss","variedCss","inlineCss","unitedCss2","variants","singularVariants","compoundVariants","defaultVariants","variantProps","compounds","key","css3","css","variantConfig","variantConfigKeys","variantConfigIndex","variantKey","applyVariant","variantInput","defaultVariants2","defaultVariantName","variantMedia","every","compareValue","condition","conditionedCss","variantCondition","variantClassName","variantCssText","classNames","hasPrimalChanged","hasVariedChanged","inlineSuffix","inlineCssText","defaultTheme","sheet","inits","composer","composers","composer2","initProps","hasInlineChanged","hasComposerChanged","apply","inline","variantName","classNameSetArray","global","keyframes","reset","clear","getCssString","getReusableSheet","args"],"mappings":"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","sourcesContent":["export const { toPrimitive } = Symbol\n\nexport const $$composers = Symbol.for('sxs.composers')\n","import { toPrimitive } from './Symbol.js'\n\nexport const { assign, create, defineProperties, getOwnPropertyDescriptors } = Object\n\nexport const createComponent = (base, prop, props) =>\n\tassign(defineProperties(base, getOwnPropertyDescriptors(props)), {\n\t\t[toPrimitive]() {\n\t\t\treturn base[prop]\n\t\t},\n\t\ttoString() {\n\t\t\treturn base[prop]\n\t\t},\n\t})\n","/** Returns the given value converted to kebab-case. */\nexport const toKebabCase = (/** @type {string} */ value) => (\n\t// ignore kebab-like values\n\tvalue.includes('-')\n\t\t? value\n\t// replace any upper-case letter with a dash and the lower-case variant\n\t: value.replace(/[A-Z]/g, (capital) => '-' + capital.toLowerCase())\n) // prettier-ignore\n\n/** Returns the given value converted to camel-case. */\nexport const toCamelCase = (/** @type {string} */ value) => (!/[A-Z]/.test(value) ? value.replace(/-[^]/g, (capital) => capital[1].toUpperCase()) : value)\n","/** Returns selectors resolved from parent selectors and nested selectors. */\nexport const getResolvedSelectors = (\n\t/** @type {string[]} Parent selectors (e.g. `[\"a\", \"button\"]`). */\n\tparentSelectors,\n\t/** @type {string[]} Nested selectors (e.g. `[\"&:hover\", \"&:focus\"]`). */\n\tnestedSelectors,\n) => (\n\tparentSelectors.reduce(\n\t\t(resolvedSelectors, parentSelector) => {\n\t\t\tresolvedSelectors.push(\n\t\t\t\t...nestedSelectors.map(\n\t\t\t\t\t(selector) => (\n\t\t\t\t\t\tselector.includes('&') ? selector.replace(\n\t\t\t\t\t\t\t/&/g,\n\t\t\t\t\t\t\t/[ +>|~]/.test(parentSelector) && /&.*&/.test(selector)\n\t\t\t\t\t\t\t\t? `:is(${parentSelector})`\n\t\t\t\t\t\t\t: parentSelector\n\t\t\t\t\t\t) : parentSelector + ' ' + selector\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\n\t\t\treturn resolvedSelectors\n\t\t},\n\t\t[]\n\t)\n) // prettier-ignore\n","export const { isArray } = Array\nexport const { from } = Array\n","import { toKebabCase } from './toCase.js'\nimport { getResolvedSelectors } from './getResolvedSelectors.js'\nimport { isArray } from './Array.js'\n\nconst { prototype: { toString } } = Object // prettier-ignore\n\n/** Comma matcher outside rounded brackets. */\nconst comma = /\\s*,\\s*(?![^()]*\\))/\n\n/** Returns a string of CSS from an object of CSS. */\nexport const stringify = (\n\t/** Object representing the current CSS. */\n\tvalue,\n\t/** Replacer function. */\n\treplacer = undefined,\n) => {\n\t/** Set used to manage the opened and closed state of rules. */\n\tconst used = new WeakSet()\n\n\tconst parse = (style, selectors, conditions, prevName, prevData) => {\n\t\tlet cssText = ''\n\n\t\teach: for (const name in style) {\n\t\t\tconst isAtRuleLike = name.charCodeAt(0) === 64\n\n\t\t\tfor (const data of isAtRuleLike && isArray(style[name]) ? style[name] : [style[name]]) {\n\t\t\t\tif (replacer && (name !== prevName || data !== prevData)) {\n\t\t\t\t\tconst next = replacer(name, data, style)\n\n\t\t\t\t\tif (next !== null) {\n\t\t\t\t\t\tcssText += typeof next === 'object' && next ? parse(next, selectors, conditions, name, data) : next == null ? '' : next\n\n\t\t\t\t\t\tcontinue each\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst isObjectLike = typeof data === 'object' && data && data.toString === toString\n\n\t\t\t\tif (isObjectLike) {\n\t\t\t\t\tif (used.has(selectors)) {\n\t\t\t\t\t\tused.delete(selectors)\n\n\t\t\t\t\t\tcssText += '}'\n\t\t\t\t\t}\n\n\t\t\t\t\tconst usedName = Object(name)\n\n\t\t\t\t\tconst nextSelectors = isAtRuleLike ? selectors : selectors.length ? getResolvedSelectors(selectors, name.split(comma)) : name.split(comma)\n\n\t\t\t\t\tcssText += parse(data, nextSelectors, isAtRuleLike ? conditions.concat(usedName) : conditions)\n\n\t\t\t\t\tif (used.has(usedName)) {\n\t\t\t\t\t\tused.delete(usedName)\n\t\t\t\t\t\tcssText += '}'\n\t\t\t\t\t}\n\n\t\t\t\t\tif (used.has(nextSelectors)) {\n\t\t\t\t\t\tused.delete(nextSelectors)\n\t\t\t\t\t\tcssText += '}'\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = 0; i < conditions.length; ++i) {\n\t\t\t\t\t\tif (!used.has(conditions[i])) {\n\t\t\t\t\t\t\tused.add(conditions[i])\n\n\t\t\t\t\t\t\tcssText += conditions[i] + '{'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selectors.length && !used.has(selectors)) {\n\t\t\t\t\t\tused.add(selectors)\n\n\t\t\t\t\t\tcssText += selectors + '{'\n\t\t\t\t\t}\n\n\t\t\t\t\tcssText += (isAtRuleLike ? name + ' ' : toKebabCase(name) + ':') + String(data) + ';'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn cssText\n\t}\n\n\treturn parse(value, [], [])\n}\n","export default /(-columns|(^|[^e]-)padding|[^t]-spacing|l-align|rows|(^|(^border|[dkmnptx]|le|ne)-)width|^border|tom|[ek]-start|(o|[^e]-du)ration|us|(^|[^tv]-)left|(^|-)top|tance|rgin|e-offset|(er|g|n|t)-block|(^|[^tv]-)right|basis|[gnt]-inline|gap|(^|[^e]-)height|ness|(^|[^p]-)inset|[ek]-end|elay|tline|ve|dent|-rotate|n-rule|(c|ck|d|ne|t)-size)$/\n","import { toCamelCase, toKebabCase } from '../../stringify/src/toCase.js'\nimport { stringify } from '../../stringify/src/index.js'\nimport unitOnlyProps from './unitOnlyProps.js'\n\n/** Token matcher. */\nconst captureTokens = /([+-])?((?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[Ee][+-]?\\d+)?)?(\\$|--)([$\\w-]+)/g\n\nconst splitBySpace = /\\s+(?![^()]*\\))/\nconst split = (fn) => (data) => fn(...(typeof data === 'string' ? String(data).split(splitBySpace) : [data]))\n\nconst mqunit = /([\\d.]+)([^]*)/\n\nconst polys = {\n\t// prefixed properties\n\tappearance: (d) => ({ WebkitAppearance: d, appearance: d }),\n\tbackfaceVisibility: (d) => ({ WebkitBackfaceVisibility: d, backfaceVisibility: d }),\n\tbackgroundClip: (d) => ({ WebkitBackgroundClip: d, backgroundClip: d }),\n\tboxDecorationBreak: (d) => ({ WebkitBoxDecorationBreak: d, boxDecorationBreak: d }),\n\tclipPath: (d) => ({ WebkitClipPath: d, clipPath: d }),\n\tcontent: (d) => ({ content: !/^([^]*[\"'][^]*|[A-Za-z]+\\([^]*|[^]*-quote|inherit|initial|none|normal|revert|unset)$/.test(d) ? `\"${d}\"` : d }),\n\thyphens: (d) => ({ WebkitHyphens: d, hyphens: d }),\n\tmaskImage: (d) => ({ WebkitMaskImage: d, maskImage: d }),\n\ttabSize: (d) => ({ MozTabSize: d, tabSize: d }),\n\tuserSelect: (d) => ({ WebkitUserSelect: d, userSelect: d }),\n\n\t// logical properties\n\tmarginBlock: split((s, e) => ({ marginBlockStart: s, marginBlockEnd: e || s })),\n\tmarginInline: split((s, e) => ({ marginInlineStart: s, marginInlineEnd: e || s })),\n\tmaxSize: split((b, i) => ({ maxBlockSize: b, maxInlineSize: i || b })),\n\tminSize: split((b, i) => ({ minBlockSize: b, minInlineSize: i || b })),\n\tpaddingBlock: split((s, e) => ({ paddingBlockStart: s, paddingBlockEnd: e || s })),\n\tpaddingInline: split((s, e) => ({ paddingInlineStart: s, paddingInlineEnd: e || s })),\n}\n\nexport const createStringify = (config) => {\n\tconst { media, prefix, themeMap, utils } = config\n\n\tlet lastRegxName\n\tlet lastRegxData\n\tlet lastUtilFunc\n\tlet lastUtilData\n\n\treturn (css) =>\n\t\tstringify(css, (name, data) => {\n\t\t\tconst firstChar = name.charCodeAt(0)\n\t\t\tconst camelName = firstChar === 64 ? name : toCamelCase(name)\n\t\t\tconst kebabName = firstChar === 64 ? name : toKebabCase(name)\n\n\t\t\tif (typeof utils[name] === 'function') {\n\t\t\t\t// run utilities that match the raw left-hand of the CSS rule or declaration\n\t\t\t\tif (utils[name] != lastUtilFunc || data != lastUtilData) {\n\t\t\t\t\tlastUtilFunc = utils[name]\n\t\t\t\t\tlastUtilData = data\n\n\t\t\t\t\treturn lastUtilFunc(config)(lastUtilData)\n\t\t\t\t}\n\t\t\t} else if (typeof polys[camelName] === 'function') {\n\t\t\t\t// run polyfills that match the camel-case-left hand of the CSS declaration\n\t\t\t\tif (polys[camelName] != lastUtilFunc || data != lastUtilData) {\n\t\t\t\t\tlastUtilFunc = polys[camelName]\n\t\t\t\t\tlastUtilData = data\n\n\t\t\t\t\treturn lastUtilFunc(lastUtilData)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlastUtilData = data\n\n\t\t\tif (lastRegxName != camelName && lastRegxData != data && /^((min|max)?((Block|Inline)Size|Height|Width)|height|width)$/.test(camelName)) {\n\t\t\t\tlastRegxName = camelName\n\t\t\t\tlastRegxData = data\n\n\t\t\t\tconst redata = String(lastRegxData).replace(\n\t\t\t\t\t/^((?:[^]*[^\\w-])?)(fit-content|stretch)((?:[^\\w-][^]*)?)$/,\n\t\t\t\t\t(data, lead, main, tail) => lead + (main === 'stretch' ? `-moz-available${tail};${kebabName}:${lead}-webkit-fill-available` : `-moz-fit-content${tail};${kebabName}:${lead}fit-content`) + tail,\n\t\t\t\t)\n\n\t\t\t\tif (redata != data) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t[name]: redata,\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/** CSS left-hand side value, which may be a specially-formatted custom property. */\n\t\t\tlet customName = (\n\t\t\t\tfirstChar === 64\n\t\t\t\t\t? (\n\t\t\t\t\t\tname.slice(1) in media\n\t\t\t\t\t\t\t? '@media ' + media[name.slice(1)]\n\t\t\t\t\t\t: name\n\t\t\t\t\t).replace(/\\(\\s*([\\w-]+)\\s*(=|<|<=|>|>=)\\s*([\\w-]+)\\s*(?:(<|<=|>|>=)\\s*([\\w-]+)\\s*)?\\)/g, (_, a, l, b, r, c) => {\n\t\t\t\t\t\tconst isValueFirst = mqunit.test(a)\n\t\t\t\t\t\tconst shift = 0.0625 * (isValueFirst ? -1 : 1)\n\t\t\t\t\t\tconst [name, value] = isValueFirst ? [b, a] : [a, b]\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t'(' +\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tl[0] === '=' ? '' : (l[0] === '>' === isValueFirst ? 'max-' : 'min-')\n\t\t\t\t\t\t\t\t) + name + ':' +\n\t\t\t\t\t\t\t\t(l[0] !== '=' && l.length === 1 ? value.replace(mqunit, (_, v, u) => Number(v) + shift * (l === '>' ? 1 : -1) + u) : value) +\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\tr\n\t\t\t\t\t\t\t\t\t\t? ') and (' + (\n\t\t\t\t\t\t\t\t\t\t\t(r[0] === '>' ? 'min-' : 'max-') + name + ':' +\n\t\t\t\t\t\t\t\t\t\t\t(r.length === 1 ? c.replace(mqunit, (_, v, u) => Number(v) + shift * (r === '>' ? -1 : 1) + u) : c)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t) +\n\t\t\t\t\t\t\t')'\n\t\t\t\t\t\t) // prettier-ignore\n\t\t\t\t\t})\n\t\t\t\t: firstChar === 36\n\t\t\t\t\t? '--' + prefix + name.replace(/\\$/g, '-')\n\t\t\t\t: name\n\t\t\t) // prettier-ignore\n\n\t\t\t/** CSS right-hand side value, which may be a specially-formatted custom property. */\n\t\t\tconst customData = (\n\t\t\t\t// preserve object-like data\n\t\t\t\ttypeof data === 'object' && data\n\t\t\t\t\t? data\n\t\t\t\t// replace specially-marked numeric property values with pixel versions\n\t\t\t\t: data && typeof data === 'number' && unitOnlyProps.test(kebabName)\n\t\t\t\t\t? String(data) + 'px'\n\t\t\t\t// replace tokens with stringified primitive values\n\t\t\t\t: String(data).replace(\n\t\t\t\t\tcaptureTokens,\n\t\t\t\t\t($0, direction, multiplier, separator, token) => (\n\t\t\t\t\t\tseparator == \"$\" == !!multiplier\n\t\t\t\t\t\t\t? $0\n\t\t\t\t\t\t: (\n\t\t\t\t\t\t\tdirection || separator == '--'\n\t\t\t\t\t\t\t\t? 'calc('\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t) + (\n\t\t\t\t\t\t\t'var(' + (\n\t\t\t\t\t\t\t\tseparator === '$'\n\t\t\t\t\t\t\t\t\t? '--' + prefix + '-' + (\n\t\t\t\t\t\t\t\t\t\t!token.includes('$')\n\t\t\t\t\t\t\t\t\t\t\t? camelName in themeMap\n\t\t\t\t\t\t\t\t\t\t\t\t? themeMap[camelName] + '-'\n\t\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t\t) + token.replace(/\\$/g, '-')\n\t\t\t\t\t\t\t\t: separator + token\n\t\t\t\t\t\t\t) + ')' + (\n\t\t\t\t\t\t\t\tdirection || separator == '--'\n\t\t\t\t\t\t\t\t\t? '*' + (\n\t\t\t\t\t\t\t\t\t\tdirection || ''\n\t\t\t\t\t\t\t\t\t) + (\n\t\t\t\t\t\t\t\t\t\tmultiplier || '1'\n\t\t\t\t\t\t\t\t\t) + ')'\n\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t)\n\t\t\t) // prettier-ignore\n\n\t\t\tif (data != customData || kebabName != customName) {\n\t\t\t\treturn {\n\t\t\t\t\t[customName]: customData,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null\n\t\t})\n}\n","export const { ownKeys } = Reflect\n","import { toPrimitive } from './Symbol.js'\nimport { from } from '../../stringify/src/Array.js'\n\nexport default class StringSet extends Set {\n\ttoString() {\n\t\treturn from(this).join('')\n\t}\n\n\tget hasChanged() {\n\t\tconst { size } = this\n\n\t\treturn () => size < this.size\n\t}\n}\n\nStringSet.prototype[toPrimitive] = StringSet.prototype.toString\n","var borderStyles = 'borderStyles'\nvar borderWidths = 'borderWidths'\nvar colors = 'colors'\nvar fonts = 'fonts'\nvar fontSizes = 'fontSizes'\nvar fontWeights = 'fontWeights'\nvar letterSpacings = 'letterSpacings'\nvar lineHeights = 'lineHeights'\nvar radii = 'radii'\nvar shadows = 'shadows'\nvar sizes = 'sizes'\nvar space = 'space'\nvar transitions = 'transitions'\nvar zIndices = 'zIndices'\n\nexport default {\n\tgap: space,\n\tgridGap: space,\n\tcolumnGap: space,\n\tgridColumnGap: space,\n\trowGap: space,\n\tgridRowGap: space,\n\tinset: space,\n\tinsetBlock: space,\n\tinsetBlockEnd: space,\n\tinsetBlockStart: space,\n\tinsetInline: space,\n\tinsetInlineEnd: space,\n\tinsetInlineStart: space,\n\tmargin: space,\n\tmarginTop: space,\n\tmarginRight: space,\n\tmarginBottom: space,\n\tmarginLeft: space,\n\tmarginBlock: space,\n\tmarginBlockEnd: space,\n\tmarginBlockStart: space,\n\tmarginInline: space,\n\tmarginInlineEnd: space,\n\tmarginInlineStart: space,\n\tpadding: space,\n\tpaddingTop: space,\n\tpaddingRight: space,\n\tpaddingBottom: space,\n\tpaddingLeft: space,\n\tpaddingBlock: space,\n\tpaddingBlockEnd: space,\n\tpaddingBlockStart: space,\n\tpaddingInline: space,\n\tpaddingInlineEnd: space,\n\tpaddingInlineStart: space,\n\ttop: space,\n\tright: space,\n\tbottom: space,\n\tleft: space,\n\tscrollMargin: space,\n\tscrollMarginTop: space,\n\tscrollMarginRight: space,\n\tscrollMarginBottom: space,\n\tscrollMarginLeft: space,\n\tscrollMarginX: space,\n\tscrollMarginY: space,\n\tscrollMarginBlock: space,\n\tscrollMarginBlockEnd: space,\n\tscrollMarginBlockStart: space,\n\tscrollMarginInline: space,\n\tscrollMarginInlineEnd: space,\n\tscrollMarginInlineStart: space,\n\tscrollPadding: space,\n\tscrollPaddingTop: space,\n\tscrollPaddingRight: space,\n\tscrollPaddingBottom: space,\n\tscrollPaddingLeft: space,\n\tscrollPaddingX: space,\n\tscrollPaddingY: space,\n\tscrollPaddingBlock: space,\n\tscrollPaddingBlockEnd: space,\n\tscrollPaddingBlockStart: space,\n\tscrollPaddingInline: space,\n\tscrollPaddingInlineEnd: space,\n\tscrollPaddingInlineStart: space,\n\n\tfontSize: fontSizes,\n\n\tbackground: colors,\n\tbackgroundColor: colors,\n\tbackgroundImage: colors,\n\tborder: colors,\n\tborderBlock: colors,\n\tborderBlockEnd: colors,\n\tborderBlockStart: colors,\n\tborderBottom: colors,\n\tborderBottomColor: colors,\n\tborderColor: colors,\n\tborderInline: colors,\n\tborderInlineEnd: colors,\n\tborderInlineStart: colors,\n\tborderLeft: colors,\n\tborderLeftColor: colors,\n\tborderRight: colors,\n\tborderRightColor: colors,\n\tborderTop: colors,\n\tborderTopColor: colors,\n\tcaretColor: colors,\n\tcolor: colors,\n\tcolumnRuleColor: colors,\n\tfill: colors,\n\toutline: colors,\n\toutlineColor: colors,\n\tstroke: colors,\n\ttextDecorationColor: colors,\n\n\tfontFamily: fonts,\n\n\tfontWeight: fontWeights,\n\n\tlineHeight: lineHeights,\n\n\tletterSpacing: letterSpacings,\n\n\tblockSize: sizes,\n\tminBlockSize: sizes,\n\tmaxBlockSize: sizes,\n\tinlineSize: sizes,\n\tminInlineSize: sizes,\n\tmaxInlineSize: sizes,\n\twidth: sizes,\n\tminWidth: sizes,\n\tmaxWidth: sizes,\n\theight: sizes,\n\tminHeight: sizes,\n\tmaxHeight: sizes,\n\tflexBasis: sizes,\n\tgridTemplateColumns: sizes,\n\tgridTemplateRows: sizes,\n\n\tborderWidth: borderWidths,\n\tborderTopWidth: borderWidths,\n\tborderRightWidth: borderWidths,\n\tborderBottomWidth: borderWidths,\n\tborderLeftWidth: borderWidths,\n\n\tborderStyle: borderStyles,\n\tborderTopStyle: borderStyles,\n\tborderRightStyle: borderStyles,\n\tborderBottomStyle: borderStyles,\n\tborderLeftStyle: borderStyles,\n\n\tborderRadius: radii,\n\tborderTopLeftRadius: radii,\n\tborderTopRightRadius: radii,\n\tborderBottomRightRadius: radii,\n\tborderBottomLeftRadius: radii,\n\n\tboxShadow: shadows,\n\ttextShadow: shadows,\n\n\ttransition: transitions,\n\n\tzIndex: zIndices,\n}\n","/** Returns a unique hash for an object. */\nexport default (\n\t/** Hash prefix. */\n\tprefix,\n\t/** Hashable object. */\n\tobject,\n) => {\n\t/** @see https://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript/52171480?#comment115384813_52171480 */\n\tfor (var value = JSON.stringify(object), index = value.length, hash = 9; index; ) {\n\t\thash = Math.imul(hash ^ value.charCodeAt(--index), 9 ** 9)\n\t}\n\n\treturn prefix + (hash ^ (hash >>> 9)).toString(36).slice(-5)\n}\n","/** Returns a filled value with a dash prefix. */\nconst dash = (value) => (value ? '-' + value : '')\n\n/** CSS token value, name, and scale. */\nclass ThemeToken {\n\tconstructor(value, token, scale = '', prefix = '') {\n\t\tthis.value = value\n\t\tthis.token = token\n\t\tthis.scale = scale\n\t\tthis.prefix = prefix\n\t}\n\n\t/** Returns a serialized CSS var() representing the token. */\n\tget computedValue() {\n\t\treturn 'var(' + this.variable + ')'\n\t}\n\n\t/** Returns a serialized name representing the token. */\n\tget variable() {\n\t\treturn '-' + dash(this.prefix) + dash(this.scale) + '-' + this.token\n\t}\n\n\t/** Returns a serialized CSS var() representing the token. */\n\ttoString() {\n\t\treturn this.computedValue\n\t}\n}\n\nexport default ThemeToken\n","import { toPrimitive } from './Symbol.js'\n\nexport default class StringArray extends Array {\n\ttoString() {\n\t\treturn this.join('')\n\t}\n\n\tget hasChanged() {\n\t\tconst cssText = String(this)\n\n\t\treturn () => cssText !== String(this)\n\t}\n}\n\nStringArray.prototype[toPrimitive] = StringArray.prototype.toString\n","import { assign } from './Object.js'\n\nexport default (init) => {\n\tlet isSsrCssRemoved = false\n\n\tlet currentCssHead\n\tlet currentCssNode\n\tlet currentSsrText\n\tlet currentHotText\n\tlet visibilityWait\n\n\tconst insertionMethod = init.insertionMethod === 'append' ? 'append' : 'prepend'\n\n\treturn (/** @type {string} */ cssText) => {\n\t\t// only update if the document is available\n\t\tif (typeof document === 'object') {\n\t\t\t// use the document head or the document root\n\t\t\tif (!currentCssHead) currentCssHead = document.head || document.documentElement\n\n\t\t\t// use the existing stitches style element, otherwise create one\n\t\t\tif (!currentCssNode) currentCssNode = document.getElementById('stitches') || assign(document.createElement('style'), { id: 'stitches', textContent: cssText })\n\n\t\t\t// use the prerendered stitches style text, otherwise create one outside of the document\n\t\t\tif (!currentSsrText) {\n\t\t\t\tcurrentSsrText = currentCssNode.firstChild || new Text()\n\n\t\t\t\tisSsrCssRemoved = !currentSsrText.data\n\t\t\t}\n\n\t\t\t// use a new stitches style text for hot-loaded styles\n\t\t\tif (!currentHotText) currentHotText = currentCssNode.insertBefore(new Text(), currentSsrText)\n\n\t\t\t// attach the stitches style element to the document if it not already connected\n\t\t\tif (!currentCssNode.isConnected) currentCssHead[insertionMethod](currentCssNode)\n\n\t\t\tcurrentHotText.data = cssText\n\n\t\t\t// remove the prerendered stiches style text once the document is visible\n\t\t\tif (!isSsrCssRemoved && cssText) {\n\t\t\t\tclearTimeout(visibilityWait)\n\n\t\t\t\tvisibilityWait = setTimeout(() => {\n\t\t\t\t\tcurrentSsrText.remove()\n\n\t\t\t\t\tisSsrCssRemoved = true\n\t\t\t\t}, 250)\n\t\t\t}\n\t\t}\n\t}\n}\n","import { assign, create, createComponent } from './Object.js'\nimport { createStringify } from './createStringify.js'\nimport { from } from '../../stringify/src/Array.js'\nimport { ownKeys } from './Reflect.js'\nimport StringSet from './StringSet.js'\nimport defaultThemeMap from './defaultThemeMap.js'\nimport getHashString from './getHashString.js'\nimport ThemeToken from './ThemeToken.js'\nimport { $$composers } from './Symbol.js'\nimport StringArray from './StringArray.js'\nimport defaultInsertionMethod from './defaultInsertionMethod.js'\n\n/** Returns a new styled sheet and accompanying API. */\nconst createCss = (initConfig) => {\n\tconst config = {}\n\n\tinitConfig = config.config = typeof initConfig === 'object' && initConfig || {}\n\n\t/** Named media queries. */\n\tconfig.media = assign({ initial: 'all' }, initConfig.media)\n\n\t/** Theme tokens enabled by default on the styled sheet. */\n\tconfig.theme = typeof initConfig.theme === 'object' && initConfig.theme || {}\n\n\t/** Mapping of css properties to theme scales. */\n\tconfig.themeMap = typeof initConfig.themeMap === 'object' && initConfig.themeMap || defaultThemeMap\n\n\t/** CSS properties corresponding to functions that accept CSS values and return new CSS object fragments. */\n\tconfig.utils = typeof initConfig.utils === 'object' && initConfig.utils || {}\n\n\t/** Names of variants passed through to props. */\n\tconst passThru = new Set([].concat(initConfig.passthru || ['as', 'className']))\n\n\t/** Prefix added before all generated class names. */\n\tconst prefix = config.prefix = initConfig.prefix || 'sx'\n\n\tconst insertionMethod = (typeof initConfig.insertionMethod === 'function' ? initConfig.insertionMethod : defaultInsertionMethod)(config)\n\n\tconst emptyClassName = '03kze'\n\n\t/** Returns a string of unnested CSS from an object of nestable CSS. */\n\tconst stringify = createStringify(config)\n\n\t/** Collection of `@import` CSS rules. */\n\tconst importCss = new StringSet()\n\n\t/** Collection of theming CSS rules. */\n\tconst themedCss = new StringSet()\n\n\t/** Collection of global CSS rules. */\n\tconst globalCss = new StringSet()\n\n\t/** Collection of component CSS rules. */\n\tconst styledCss = new StringSet()\n\n\tconst unitedCss = new StringSet([importCss, themedCss, globalCss, styledCss])\n\n\tlet currentCssText = ''\n\n\tconst update = () => {\n\t\tconst nextUpdate = from(unitedCss).join('')\n\n\t\tif (currentCssText !== nextUpdate) {\n\t\t\tinsertionMethod((currentCssText = nextUpdate))\n\t\t}\n\t}\n\n\t/** Prepares global CSS and returns a function that enables the styles on the styled sheet. */\n\tconst theme = (\n\t\t/** Class name */\n\t\tclassName,\n\t\t/** Object of theme scales with inner token values. */\n\t\ttheme,\n\t) => {\n\t\t// theme is the first argument if it is an object, otherwise the second argument as an object\n\t\ttheme = typeof className === 'object' && className || Object(theme)\n\n\t\t// class name is the first argument if it is a string, otherwise an empty string\n\t\tclassName = typeof className === 'string' ? className : ''\n\n\t\t// class name is either itself or the unique hash representing its styles\n\t\tclassName = className || getHashString(prefix, theme)\n\n\t\t/** CSS Selector */\n\t\tconst selector = className.replace(/^\\w/, '.$&')\n\n\t\tconst expression = createComponent(create(null), 'className', {\n\t\t\tclassName,\n\t\t\tselector,\n\t\t})\n\n\t\tconst rootStyles = {}\n\n\t\tconst styles = rootStyles[selector] = {}\n\n\t\tfor (const scale in theme) {\n\t\t\texpression[scale] = create(null)\n\n\t\t\tfor (const token in theme[scale]) {\n\t\t\t\tlet value = String(theme[scale][token])\n\n\t\t\t\tif (value.includes('$')) value = value.replace(/\\$([$\\w-]+)/g, ($0, $1) => ($1.includes('$') ? $0 : '$' + scale + $0))\n\n\t\t\t\tconst themeToken = expression[scale][token] = new ThemeToken(\n\t\t\t\t\tvalue,\n\t\t\t\t\ttoken,\n\t\t\t\t\tscale,\n\t\t\t\t\tprefix,\n\t\t\t\t)\n\n\t\t\t\tstyles[themeToken.variable] = themeToken.value\n\t\t\t}\n\t\t}\n\n\t\t/** Computed CSS of custom property styles representing themed token values. */\n\t\tconst cssText = className === prefix + emptyClassName ? '' : stringify(rootStyles)\n\n\t\treturn createComponent(expression, 'className', {\n\t\t\tget className() {\n\t\t\t\tconst { hasChanged } = themedCss\n\n\t\t\t\tthemedCss.add(cssText)\n\n\t\t\t\tif (hasChanged()) {\n\t\t\t\t\tupdate()\n\t\t\t\t}\n\n\t\t\t\treturn className\n\t\t\t},\n\t\t\tselector,\n\t\t})\n\t}\n\n\t/** Returns a function that enables the styles on the styled sheet. */\n\tconst global = (\n\t\t/** Styles representing global CSS. */\n\t\tstyle,\n\t\t/** Optional name */\n\t\tname = '',\n\t) => {\n\t\t/** List of global import styles. */\n\t\tconst localImportCss = new StringSet()\n\n\t\t/** List of global styles. */\n\t\tconst localGlobalCss = new StringSet()\n\n\t\tfor (const name in style) {\n\t\t\tif (style[name] !== Object(style[name]) || ownKeys(style[name]).length) {\n\t\t\t\tconst cssText = stringify({ [name]: style[name] })\n\n\t\t\t\t;(name === '@import' ? localImportCss : localGlobalCss).add(cssText)\n\t\t\t}\n\t\t}\n\n\t\tconst expression = createComponent(create(null), 'name', { name })\n\n\t\tconst express = createComponent(\n\t\t\t() => {\n\t\t\t\tlet hasImportChanged = importCss.hasChanged\n\t\t\t\tlet hasGlobalChanged = globalCss.hasChanged\n\n\t\t\t\tlocalImportCss.forEach((localImportCss) => {\n\t\t\t\t\timportCss.add(localImportCss)\n\t\t\t\t})\n\n\t\t\t\tlocalGlobalCss.forEach((localGlobalCss) => {\n\t\t\t\t\tglobalCss.add(localGlobalCss)\n\t\t\t\t})\n\n\t\t\t\tif (hasImportChanged() || hasGlobalChanged()) {\n\t\t\t\t\tupdate()\n\t\t\t\t}\n\n\t\t\t\treturn expression\n\t\t\t},\n\t\t\t'name',\n\t\t\t{\n\t\t\t\tget name() {\n\t\t\t\t\treturn String(express())\n\t\t\t\t},\n\t\t\t},\n\t\t)\n\n\t\treturn express\n\t}\n\n\t/** Returns a function that enables the keyframe styles on the styled sheet. */\n\tconst keyframes = (\n\t\t/** Styles representing global CSS. */\n\t\tstyle,\n\t) => {\n\t\t/** Unique name representing the current keyframes rule. */\n\t\tconst name = getHashString(prefix, style)\n\n\t\treturn global({ ['@keyframes ' + name]: style }, name)\n\t}\n\n\tconst createComposer = (initStyle) => {\n\t\tconst primalCss = new StringSet()\n\t\tconst variedCss = new StringArray()\n\t\tconst inlineCss = new StringSet()\n\n\t\tconst unitedCss = new StringSet([primalCss, variedCss, inlineCss])\n\n\t\tlet { variants: singularVariants, compoundVariants, defaultVariants, ...style } = initStyle\n\n\t\tdefaultVariants = Object(defaultVariants)\n\n\t\tconst className = getHashString(prefix, initStyle)\n\t\tconst selector = '.' + className\n\t\tconst cssText = className === prefix + emptyClassName ? '' : stringify({ [selector]: style })\n\n\t\tstyledCss.add(unitedCss)\n\n\t\tconst variantProps = create(null)\n\t\tconst variants = []\n\t\tconst compounds = []\n\n\t\tfor (const key in singularVariants) {\n\t\t\tfor (const value in singularVariants[key]) {\n\t\t\t\tconst css = singularVariants[key][value]\n\n\t\t\t\tcompounds.push({\n\t\t\t\t\t[key]: value,\n\t\t\t\t\tcss,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\tcompounds.push(...(compoundVariants || []))\n\n\t\tfor (const index in compounds) {\n\t\t\tconst { css, ...variantConfig } = compounds[index]\n\n\t\t\tconst variantConfigKeys = ownKeys(variantConfig)\n\t\t\tconst variantConfigIndex = variantConfigKeys.length\n\n\t\t\tfor (const variantKey of variantConfigKeys) {\n\t\t\t\tvariantProps[variantKey] = variantProps[variantKey] || create(null)\n\n\t\t\t\tvariantProps[variantKey][variantConfig[variantKey]] = true\n\t\t\t}\n\n\t\t\tconst applyVariant = (variantInput, defaultVariants) => {\n\t\t\t\tvariantInput = { ...variantInput }\n\n\t\t\t\tfor (const defaultVariantName in defaultVariants) {\n\t\t\t\t\tif (variantInput[defaultVariantName] === undefined && !Object(variantProps[defaultVariantName])[variantInput[defaultVariantName]]) {\n\t\t\t\t\t\tvariantInput[defaultVariantName] = defaultVariants[defaultVariantName]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst variantMedia = new Set()\n\n\t\t\t\tif (\n\t\t\t\t\tvariantConfigKeys.length &&\n\t\t\t\t\tvariantConfigKeys.every((key) => {\n\t\t\t\t\t\tconst value = variantInput[key]\n\t\t\t\t\t\tconst compareValue = String(variantConfig[key])\n\n\t\t\t\t\t\tif (compareValue === String(value)) return true\n\n\t\t\t\t\t\tif (value === Object(value)) {\n\t\t\t\t\t\t\tfor (const condition in value) {\n\t\t\t\t\t\t\t\tif (compareValue == String(value[condition]) && condition.charCodeAt(0) === 64) {\n\t\t\t\t\t\t\t\t\tvariantMedia.add(condition)\n\t\t\t\t\t\t\t\t\treturn true\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t) {\n\t\t\t\t\tlet conditionedCss = Object(css)\n\n\t\t\t\t\tfor (const variantCondition of variantMedia) {\n\t\t\t\t\t\tconditionedCss = {\n\t\t\t\t\t\t\t[variantCondition]: conditionedCss,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst variantClassName = className + getHashString('', conditionedCss) + '--' + (variantConfigIndex === 1 ? variantConfigKeys[0] + '-' + variantConfig[variantConfigKeys[0]] : 'c' + variantConfigIndex)\n\t\t\t\t\tconst variantSelector = '.' + variantClassName\n\t\t\t\t\tconst variantCssText = stringify({ [variantSelector]: conditionedCss })\n\t\t\t\t\tconst variantCssByIndex = variedCss[variantConfigIndex - 1] || (variedCss[variantConfigIndex - 1] = new StringSet())\n\n\t\t\t\t\tvariantCssByIndex.add(variantCssText)\n\n\t\t\t\t\treturn variantClassName\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvariants.push(applyVariant)\n\t\t}\n\n\t\treturn {\n\t\t\tapply(props, classNames, defaultVariants) {\n\t\t\t\tconst hasPrimalChanged = primalCss.hasChanged\n\t\t\t\tconst hasVariedChanged = variedCss.hasChanged\n\n\t\t\t\tprimalCss.add(cssText)\n\n\t\t\t\tif (props) {\n\t\t\t\t\tclassNames.add(className)\n\n\t\t\t\t\tfor (const applyVariant of variants) {\n\t\t\t\t\t\tconst variantClassName = applyVariant(props, defaultVariants)\n\n\t\t\t\t\t\tif (variantClassName) {\n\t\t\t\t\t\t\tclassNames.add(variantClassName)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasPrimalChanged() || hasVariedChanged()) {\n\t\t\t\t\tstyledCss.add(unitedCss)\n\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t},\n\t\t\tinline(css, classNames) {\n\t\t\t\tconst inlineSuffix = getHashString('-', css)\n\t\t\t\tconst inlineSelector = selector + inlineSuffix\n\t\t\t\tconst inlineCssText = className === '-' + inlineSuffix ? '' : stringify({ [inlineSelector]: css })\n\n\t\t\t\tclassNames.add(className + inlineSuffix)\n\n\t\t\t\tconst { hasChanged } = inlineCss\n\n\t\t\t\tif (inlineCssText) {\n\t\t\t\t\tinlineCss.add(inlineCssText)\n\t\t\t\t}\n\n\t\t\t\treturn hasChanged()\n\t\t\t},\n\t\t\tclassName,\n\t\t\tdefaultVariants,\n\t\t\tselector,\n\t\t\tvariantProps,\n\t\t}\n\t}\n\n\tconst css = (...inits) => {\n\t\tlet composer\n\t\tlet composers = []\n\t\tlet defaultVariants = create(null)\n\n\t\tfor (const init of inits) {\n\t\t\tif (init === Object(init)) {\n\t\t\t\tif ($$composers in init) {\n\t\t\t\t\tfor (const composer of init[$$composers]) {\n\t\t\t\t\t\tcomposers.push(composer)\n\n\t\t\t\t\t\tassign(defaultVariants, composer.defaultVariants)\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcomposers.push((composer = createComposer(init)))\n\n\t\t\t\t\tassign(defaultVariants, composer.defaultVariants)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!composer) {\n\t\t\tcomposers.push((composer = createComposer({})))\n\t\t}\n\n\t\treturn createComponent(\n\t\t\t(initProps) => {\n\t\t\t\tconst { css, ...props } = Object(initProps)\n\n\t\t\t\tconst classNames = new Set()\n\n\t\t\t\tlet hasComposerChanged = false\n\n\t\t\t\tfor (const composer of composers) {\n\t\t\t\t\thasComposerChanged = composer.apply(props, classNames, defaultVariants) || hasComposerChanged\n\t\t\t\t}\n\n\t\t\t\tlet hasInlineChanged\n\n\t\t\t\tif (css === Object(css)) {\n\t\t\t\t\thasInlineChanged = composer.inline(css, classNames)\n\t\t\t\t}\n\n\t\t\t\tif (hasComposerChanged || hasInlineChanged) {\n\t\t\t\t\tupdate()\n\t\t\t\t}\n\n\t\t\t\tfor (const variantName in composer.variantProps) {\n\t\t\t\t\tif (!passThru.has(variantName)) {\n\t\t\t\t\t\tdelete props[variantName]\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (typeof props.className === 'string') {\n\t\t\t\t\tprops.className.split(/\\s+/).forEach(classNames.add, classNames)\n\t\t\t\t}\n\n\t\t\t\tconst classNameSetArray = from(classNames)\n\n\t\t\t\tprops.className = classNameSetArray.join(' ')\n\n\t\t\t\treturn createComponent(create(null), 'className', {\n\t\t\t\t\tget [$$composers]() {\n\t\t\t\t\t\treturn composers\n\t\t\t\t\t},\n\t\t\t\t\tclassName: props.className,\n\t\t\t\t\tprops,\n\t\t\t\t\tselector: composer.selector,\n\t\t\t\t})\n\t\t\t},\n\t\t\t'className',\n\t\t\t{\n\t\t\t\tget [$$composers]() {\n\t\t\t\t\treturn composers\n\t\t\t\t},\n\t\t\t\t/** Applies the primary composer and returns the class name. */\n\t\t\t\tget className() {\n\t\t\t\t\tif (composer.apply()) {\n\t\t\t\t\t\tupdate()\n\t\t\t\t\t}\n\n\t\t\t\t\treturn composer.className\n\t\t\t\t},\n\t\t\t\tselector: composer.selector,\n\t\t\t},\n\t\t)\n\t}\n\n\tconst defaultTheme = theme(':root', config.theme)\n\n\tconst sheet = createComponent(\n\t\t{\n\t\t\tcss,\n\t\t\tconfig,\n\t\t\tglobal,\n\t\t\tkeyframes,\n\t\t\tprefix,\n\t\t\treset() {\n\t\t\t\timportCss.clear()\n\t\t\t\tthemedCss.clear()\n\t\t\t\tglobalCss.clear()\n\t\t\t\tstyledCss.clear()\n\t\t\t\tdefaultTheme.className\n\t\t\t\treturn sheet\n\t\t\t},\n\t\t\ttheme: assign(theme, defaultTheme),\n\t\t\tget cssText() {\n\t\t\t\treturn currentCssText\n\t\t\t},\n\t\t\tgetCssString() {\n\t\t\t\treturn currentCssText\n\t\t\t},\n\t\t},\n\t\t'cssText',\n\t\t{},\n\t)\n\n\treturn sheet\n} // prettier-ignore\n\nconst getReusableSheet = () => getReusableSheet.config || (getReusableSheet.config = createCss())\nconst css = (...args) => getReusableSheet().css(...args)\nconst global = (...args) => getReusableSheet().global(...args)\nconst keyframes = (...args) => getReusableSheet().keyframes(...args)\n\nexport { createCss, defaultThemeMap, css, global, keyframes }\n"]}